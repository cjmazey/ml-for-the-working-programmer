* Chapter 2

Names, Functions and Types

** Exercise 2.1

   The SML/NJ interpreter can be started with
#+BEGIN_SRC sh
  sml
#+END_SRC

   A file "foo.sml" can be read in (as if it had been typed) with
#+BEGIN_SRC sml
  use "foo.sml";
#+END_SRC

** Exercise 2.2

   No. . .integers are exact.

** Exercise 2.3

   Just =g=.
#+BEGIN_SRC sml
  fun double n = 2 * n
  fun f u = Math.sin u / u
  fun g k = ~k * k
#+END_SRC

#+RESULTS:
: val double = fn : int -> int
: val f = fn : real -> real
: val g = fn : int -> int

** Exercise 2.4

   In the first case, we'll get whatever character comes before =0=
   and after =9=:
#+BEGIN_SRC sml
  fun digit i = chr (i + ord #"0")

  val it = digit ~1
  val it = digit 10
#+END_SRC

#+RESULTS:
: val digit = fn : int -> char
: val it = <hidden-value> : char
: val it = #":" : char

   In the second case, we will get errors:
#+BEGIN_SRC sml
  fun digit i = String.sub ("0123456789", i)

  val it = digit ~1
  val it = digit 10
#+END_SRC

#+RESULTS:
:
: uncaught exception Subscript [subscript out of bounds]

** Exercise 2.5
